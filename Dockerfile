# setup.js
# Generated By: Gemini 2.5 Flash LLM (01-07-2025)

# Stage 1: Dependency Installation and Build
FROM node:22-alpine AS builder

WORKDIR /app

# Copy package.json and package-lock.json first to leverage Docker cache
# This ensures npm install is only re-run if dependencies change
COPY package.json package-lock.json ./

# Install dependencies (including devDependencies for build)
# --frozen-lockfile ensures exact versions from package-lock.json
RUN npm install --frozen-lockfile

# Copy the rest of the application code
COPY . .

ENV DATABASE_TYPE="sqlite"
ENV DATABASE_URL_SQLITE="file:./promptopia.db"
ENV SESSION_SECRET="your_secret"

# Set build-time argument for Next.js telemetry (optional, but good practice)
ARG NEXT_TELEMETRY_DISABLED=1

# Build the Next.js application for production
# The 'build' script now includes 'npm run setup' which handles Prisma client generation/migrations
RUN npm run build



# ==============================================================================================================



# Stage 2: Run the Next.js application
FROM node:22-alpine AS runner

WORKDIR /app

COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/package-lock.json ./package-lock.json

RUN npm install --frozen-lockfile --omit-dev

COPY --from=builder /app/public ./public
COPY --from=builder /app/.next ./.next


COPY --from=builder /app/prisma ./prisma
COPY --from=builder /app/src/generated ./src/generated
COPY --from=builder /app/scripts ./scripts


# Important Warning: NONE CHANGEABLES (probably because it depends on BUILDER STAGE above in this docker file)..
#          Have a look around into codebase and into previous stages in dockerfile... before change them...
ENV NODE_ENV="production"
ENV DATABASE_TYPE="sqlite"
ENV DATABASE_URL_SQLITE="file:./promptopia.db"


# CHANGEABLES (recommended to change)
ENV LOGGING="verbose"
ENV SESSION_SECRET="example_session_secret"


# Expose the port Next.js runs on (default is 3000)
EXPOSE 3000


# Set the command to start the Next.js application in production mode
CMD ["npm", "start"]
